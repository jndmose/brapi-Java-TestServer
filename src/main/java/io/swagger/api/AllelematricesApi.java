/**
 * NOTE: This class is auto generated by the swagger code generator program (1.0.16).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.AlleleMatrixDetailsResponse;
import io.swagger.annotations.*;

import org.brapi.test.BrAPITestServer.exceptions.BrAPIServerException;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;

@Api(value = "allelematrices", description = "the allelematrices API")
public interface AllelematricesApi {

    @ApiOperation(value = "Matrices through GET", nickname = "allelematricesGet", notes = "<strong>Status</strong>: Proposed <strong>Implemented by</strong>: GOBII <strong>Used by</strong>: Flapjack </br> This resource is used for reading and writing genomic matrices: </br> GET provides a list of available matrices, optionally filtered by study; POST will provide a means for adding new matrices (content TBD).", response = AlleleMatrixDetailsResponse.class, tags={ "Marker Profiles", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = AlleleMatrixDetailsResponse.class) })
    @RequestMapping(value = "/allelematrices",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<AlleleMatrixDetailsResponse> allelematricesGet(@NotNull @ApiParam(value = "restricts the list of matrices to a specific study.", required = true) @Valid @RequestParam(value = "studyDbId", required = true) String studyDbId,@ApiParam(value = "The size of the pages to be returned. Default is `1000`.") @Valid @RequestParam(value = "pageSize", required = false) Integer pageSize,@ApiParam(value = "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.") @Valid @RequestParam(value = "page", required = false) Integer page) throws BrAPIServerException;

}
