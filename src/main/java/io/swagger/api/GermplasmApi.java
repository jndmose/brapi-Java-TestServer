/**
 * NOTE: This class is auto generated by the swagger code generator program (1.0.16).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.GermplasmAttributeListResponse;
import io.swagger.model.GermplasmMarkerprofilesListResponse;
import io.swagger.model.GermplasmResponse1;
import io.swagger.model.PedigreeResponse;
import io.swagger.model.ProgenyResponse;
import io.swagger.annotations.*;

import org.brapi.test.BrAPITestServer.exceptions.BrAPIServerException;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;

import java.util.ArrayList;
import java.util.List;

@Api(value = "germplasm", description = "the germplasm API")
public interface GermplasmApi {

    @ApiOperation(value = "Germplasm attribute values", nickname = "germplasmGermplasmDbIdAttributesGet", notes = "Values for all attributes by default.  <a href=\"https://test-server.brapi.org/brapi/v1/germplasm\"> test-server.brapi.org/brapi/v1/germplasm/{germplasmDbId}/attributes</a>", response = GermplasmAttributeListResponse.class, tags={ "Germplasm Attributes","Germplasm", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = GermplasmAttributeListResponse.class) })
    @RequestMapping(value = "/germplasm/{germplasmDbId}/attributes",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<GermplasmAttributeListResponse> germplasmGermplasmDbIdAttributesGet(@ApiParam(value = "The germplasm characterized",required=true) @PathVariable("germplasmDbId") String germplasmDbId,@ApiParam(value = "Restrict the response to only the listed attributeDbIds.") @Valid @RequestParam(value = "attributeDbIds", required = false) ArrayList<String> attributeDbIds,@ApiParam(value = "**Deprecated** Use \"attributeDbIds\" instead") @Valid @RequestParam(value = "attributeList", required = false) ArrayList<String> attributeList,@ApiParam(value = "The size of the pages to be returned. Default is `1000`.") @Valid @RequestParam(value = "pageSize", required = false) Integer pageSize,@ApiParam(value = "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.") @Valid @RequestParam(value = "page", required = false) Integer page) throws BrAPIServerException;


    @ApiOperation(value = "Germplasm search by germplasmDbId", nickname = "germplasmGermplasmDbIdGet", notes = " Scope: CORE. Status: ACCEPTED. Implementation target date: PAG2016 Implemented by: Tripal Brapi module, Germinate, Cassavabase Note: Germplasm Details by germplasmDbId was merged with Germplasm Multi Crop Passport Data. The MCPD fields are optional and marked with the prefix [MCPD]. <a href=\"https://test-server.brapi.org/brapi/v1/germplasm\"> test-server.brapi.org/brapi/v1/germplasm/{germplasmDbId}</a> ", response = GermplasmResponse1.class, tags={ "Germplasm", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = GermplasmResponse1.class) })
    @RequestMapping(value = "/germplasm/{germplasmDbId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<GermplasmResponse1> germplasmGermplasmDbIdGet(@ApiParam(value = "The internal id of the germplasm",required=true) @PathVariable("germplasmDbId") String germplasmDbId);


    @ApiOperation(value = "Markerprofiles by germplasmDbId", nickname = "germplasmGermplasmDbIdMarkerprofilesGet", notes = " Retrieve the markerProfileDbIds for a given Germplasm ID Scope: GENOTYPING. Status: ACCEPTED. Implementation target date: PAG2016 Implemented by: Germinate, Cassavabase <a href=\"https://test-server.brapi.org/brapi/v1/germplasm\"> test-server.brapi.org/brapi/v1/germplasm/{germplasmDbId}/markerprofiles</a> ", response = GermplasmMarkerprofilesListResponse.class, tags={ "Germplasm", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = GermplasmMarkerprofilesListResponse.class) })
    @RequestMapping(value = "/germplasm/{germplasmDbId}/markerprofiles",
        method = RequestMethod.GET)
    ResponseEntity<GermplasmMarkerprofilesListResponse> germplasmGermplasmDbIdMarkerprofilesGet(@ApiParam(value = "the internal id of the germplasm",required=true) @PathVariable("germplasmDbId") String germplasmDbId);


    @ApiOperation(value = "Germplasm pedigree by id", nickname = "germplasmGermplasmDbIdPedigreeGet", notes = " Scope: CORE. Status: ACCEPTED. Implementation target date: PAG2016 Implemented by: Germinate, Tripal Brapi Module, Cassavabase (without notation option) (http://wheat.pw.usda.gov/ggpages/gopher/administration/Template%20for%20Germplasm%20records.html) or [Lamacraft] (http://link.springer.com/article/10.1007%2FBF00021556). <a href=\"https://test-server.brapi.org/brapi/v1/germplasm\"> test-server.brapi.org/brapi/v1/germplasm/{germplasmDbId}/pedigree</a> ", response = PedigreeResponse.class, tags={ "Germplasm", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = PedigreeResponse.class) })
    @RequestMapping(value = "/germplasm/{germplasmDbId}/pedigree",
        method = RequestMethod.GET)
    ResponseEntity<PedigreeResponse> germplasmGermplasmDbIdPedigreeGet(@ApiParam(value = "the internal id of the germplasm",required=true) @PathVariable("germplasmDbId") String germplasmDbId,@ApiParam(value = "text representation of the pedigree") @Valid @RequestParam(value = "notation", required = false) String notation,@ApiParam(value = "include array of siblings in response") @Valid @RequestParam(value = "includeSiblings", required = false) Boolean includeSiblings);


    @ApiOperation(value = "Germplasm pedigree by id", nickname = "germplasmGermplasmDbIdProgenyGet", notes = " Scope: Germplasm Get the germplasmDbIds for all the Progeny of a particular germplasm. <a href=\"https://test-server.brapi.org/brapi/v1/germplasm\"> test-server.brapi.org/brapi/v1/germplasm/{germplasmDbId}/progeny</a> ", response = ProgenyResponse.class, tags={ "Germplasm", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ProgenyResponse.class) })
    @RequestMapping(value = "/germplasm/{germplasmDbId}/progeny",
        method = RequestMethod.GET)
    ResponseEntity<ProgenyResponse> germplasmGermplasmDbIdProgenyGet(@ApiParam(value = "the internal id of the germplasm",required=true) @PathVariable("germplasmDbId") String germplasmDbId);

}
