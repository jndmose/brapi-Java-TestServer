/**
 * NOTE: This class is auto generated by the swagger code generator program (1.0.16).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.MarkerProfileDescriptionsResponse;
import io.swagger.model.MarkerProfilesResponse;
import io.swagger.annotations.*;

import org.brapi.test.BrAPITestServer.exceptions.BrAPIServerException;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;

@Api(value = "markerprofiles", description = "the markerprofiles API")
public interface MarkerprofilesApi {

    @ApiOperation(value = "Retrieve Markerprofile Ids", nickname = "markerprofilesGet", notes = "<strong>Scope</strong>: GENOTYPING. <strong>Status</strong>: ACCEPTED. <strong>Implemented by</strong>: Germinate <strong>Used by</strong>: Flapjack </br> For the requested Germplasm Id and/or Extract Id, returns the Markerprofile Id and number of non-missing allele calls (marker/allele pairs).", response = MarkerProfileDescriptionsResponse.class, tags={ "Marker Profiles", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = MarkerProfileDescriptionsResponse.class) })
    @RequestMapping(value = "/markerprofiles",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<MarkerProfileDescriptionsResponse> markerprofilesGet(@ApiParam(value = "The server's internal ids for the Germplasm IDs, as returned by the <strong>Find markerprofile by Germplasm</strong> service.") @Valid @RequestParam(value = "germplasmDbId", required = false) String germplasmDbId,@ApiParam(value = "The server's internal id for the StudyDbId") @Valid @RequestParam(value = "studyDbId", required = false) String studyDbId,@ApiParam(value = "The server's internal id for the SampleDbId") @Valid @RequestParam(value = "sampleDbId", required = false) String sampleDbId,@ApiParam(value = "The server's internal id for the ExtractDbId") @Valid @RequestParam(value = "extractDbId", required = false) String extractDbId,@ApiParam(value = "The number of allele call results (marker/allele pairs) to be returned in the response. If multiple experiments are requested, some responses will contain the last results from one experiment followed by the first results from the next.") @Valid @RequestParam(value = "pageSize", required = false) Integer pageSize,@ApiParam(value = "Required if `pageSize` is given; and requires that `pageSize` be given. The page indexing starts at 0 (the first page is 'page'=0)") @Valid @RequestParam(value = "page", required = false) Integer page) throws BrAPIServerException;


    @ApiOperation(value = "Alleles By Markerprofile Id", nickname = "markerprofilesMarkerprofileDbIdGet", notes = "<strong>Scope</strong>:GENOTYPING. <strong>Status</strong>: ACCEPTED. <strong>Implemented by</strong>: Germinate, Cassavabase </br> For the requested markerprofile ID, returns the allele call for each marker.  [Example](http://malt.pw.usda.gov/t3/wheatplus/markerprofiles/1784_99/count?analysisMethod=GoldenGate) </br> <strong>Allele encodings</strong>  - Unknown data will by default be encoded by \"N\" - Homozygotes are returned as a single occurance, e.g. AA -> A, GG -> G - Phased heterozygotes are by default separated by a pipe (\"|\") and unphased heterozygotes are by default separated by a forward slash (\"/\") - Dominant markers such as DArTs: 1 for present, 0 for absent  <strong>Parameters</strong> - If the user would like to use an empty string (\"\") for any of the parameters, the value should be set to the reserved word \"empty_string\", e.g. sepUnphased=empty_string.  <strong>Open issue:</strong> The pages of data will need to be sorted sensibly in order for the requested page to be delivered consistently.  By map or genome position? Alphabetically?'", response = MarkerProfilesResponse.class, tags={ "Marker Profiles", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = MarkerProfilesResponse.class) })
    @RequestMapping(value = "/markerprofiles/{markerprofileDbId}",
        method = RequestMethod.GET)
    ResponseEntity<MarkerProfilesResponse> markerprofilesMarkerprofileDbIdGet(@ApiParam(value = "The server's internal id for the markerprofile",required=true) @PathVariable("markerprofileDbId") String markerprofileDbId,@ApiParam(value = "Should homozygotes NOT be collapsed into a single orrucance?") @Valid @RequestParam(value = "expandHomozygotes", required = false) Boolean expandHomozygotes,@ApiParam(value = "The string to use as a representation for missing data or the reserved word \"empty_string\".") @Valid @RequestParam(value = "unknownString", required = false) String unknownString,@ApiParam(value = "The string to use as a separator for phased allele calls or the reserved word \"empty_string\".") @Valid @RequestParam(value = "sepPhased", required = false) String sepPhased,@ApiParam(value = "The string to use as a separator for unphased allele calls or the reserved word \"empty_string\".") @Valid @RequestParam(value = "sepUnphased", required = false) String sepUnphased,@ApiParam(value = "The number of allele call results (marker/allele pairs) to be returned in the response. If multiple experiments are requested, some responses will contain the last results from one experiment followed by the first results from the next.") @Valid @RequestParam(value = "pageSize", required = false) Integer pageSize,@ApiParam(value = "Required if `pageSize` is given; and requires that `pageSize` be given. The page indexing starts at 0 (the first page is 'page'=0)") @Valid @RequestParam(value = "page", required = false) Integer page) throws BrAPIServerException;

}
