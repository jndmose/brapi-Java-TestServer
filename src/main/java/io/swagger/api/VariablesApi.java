/**
 * NOTE: This class is auto generated by the swagger code generator program (1.0.16).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.DataTypesResponse;
import io.swagger.model.ObservationVariableResponse;
import io.swagger.model.ObservationVariablesResponse;
import io.swagger.annotations.*;

import org.brapi.test.BrAPITestServer.exceptions.BrAPIServerException;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;

@Api(value = "variables", description = "the variables API")
public interface VariablesApi {

    @ApiOperation(value = "Variable data type list", nickname = "variablesDatatypesGet", notes = "Call to retrieve a list of data types the variable can have.", response = DataTypesResponse.class, tags={ "Observation Variables", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = DataTypesResponse.class) })
    @RequestMapping(value = "/variables/datatypes",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<DataTypesResponse> variablesDatatypesGet(@ApiParam(value = "The size of the pages to be returned. Default is `1000`.") @Valid @RequestParam(value = "pageSize", required = false) Integer pageSize,@ApiParam(value = "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.") @Valid @RequestParam(value = "page", required = false) Integer page) throws BrAPIServerException;


    @ApiOperation(value = "Variable list", nickname = "variablesGet", notes = "Call to retrieve a list of observationVariables available in the system. <br> <strong>Scope:</strong> CORE. <strong>Status:</strong> ACCEPTED.", response = ObservationVariablesResponse.class, tags={ "Observation Variables", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ObservationVariablesResponse.class) })
    @RequestMapping(value = "/variables",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<ObservationVariablesResponse> variablesGet(@ApiParam(value = "The size of the pages to be returned. Default is `1000`.") @Valid @RequestParam(value = "pageSize", required = false) Integer pageSize,@ApiParam(value = "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.") @Valid @RequestParam(value = "page", required = false) Integer page,@ApiParam(value = "Variable's trait class (phenological, physiological, morphological, etc.)") @Valid @RequestParam(value = "traitClass", required = false) String traitClass) throws BrAPIServerException;


    @ApiOperation(value = "Variable details by id", nickname = "variablesObservationVariableDbIdGet", notes = "Retrieve variable details <br> <strong>Scope:</strong> CORE <strong>Status:</strong> ACCEPTED", response = ObservationVariableResponse.class, tags={ "Observation Variables", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ObservationVariableResponse.class) })
    @RequestMapping(value = "/variables/{observationVariableDbId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<ObservationVariableResponse> variablesObservationVariableDbIdGet(@ApiParam(value = "string id of the variable",required=true) @PathVariable("observationVariableDbId") String observationVariableDbId);

}
